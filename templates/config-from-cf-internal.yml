config_from_cf:
  acceptance_tests:
    apps_domain: (( properties.acceptance_tests.apps_domain ))
    api: (( properties.acceptance_tests.api ))
    admin_user: (( properties.acceptance_tests.admin_user ))
    admin_password: (( properties.acceptance_tests.admin_password ))
    skip_ssl_validation: (( properties.acceptance_tests.skip_ssl_validation ))
    use_http: (( properties.acceptance_tests.use_http ))
  cf_deployment_name: (( name ))
  consul:
    domain: (( properties.consul.agent.domain ))
    log_level: (( properties.consul.agent.log_level ))
    lan_servers: (( properties.consul.agent.servers.lan ))
    ca_cert: (( properties.consul.ca_cert ))
    agent_cert: (( properties.consul.agent_cert ))
    agent_key: (( properties.consul.agent_key ))
    encrypt_keys: (( properties.consul.encrypt_keys ))
    require_ssl: (( properties.consul.require_ssl ))
    server_cert: (( properties.consul.server_cert ))
    server_key: (( properties.consul.server_key ))
  loggregator:
    etcd:
      machines: (( properties.loggregator.etcd.machines ))
      ca_cert: (( properties.loggregator.etcd.ca_cert ))
      require_ssl: (( properties.loggregator.etcd.require_ssl ))
    tls:
      ca_cert: (( properties.loggregator.tls.ca_cert ))
      metron:
        cert: (( properties.loggregator.tls.metron.cert ))
        key: (( properties.loggregator.tls.metron.key ))
      statsd_injector:
        cert: (( properties.loggregator.tls.statsd_injector.cert ))
        key: (( properties.loggregator.tls.statsd_injector.key ))
  metron_agent:
    etcd:
      client_cert: (( properties.metron_agent.etcd.client_cert ))
      client_key: (( properties.metron_agent.etcd.client_key ))
  metron_endpoint:
    shared_secret: (( properties.metron_endpoint.shared_secret ))
  system_domain: (( properties.system_domain ))
  databases:
    address: (( properties.databases.address || nil ))
    db_scheme: (( properties.databases.db_scheme || nil ))
    port: (( properties.databases.port || nil ))
  uaa:
    ca_cert: (( properties.uaa.ca_cert ))
    port: (( properties.uaa.port ))
    ssl:
      port: (( properties.uaa.ssl.port ))
    clients:
      gorouter:
        secret: (( properties.uaa.clients.gorouter.secret ))
      tcp_emitter:
        secret: (( properties.uaa.clients.tcp_emitter.secret ))
      tcp_router:
        secret: (( properties.uaa.clients.tcp_router.secret ))
  statsd_injector:
    deployment: (( properties.statsd_injector.deployment ))

# The keys below should not be included in the final stub
name: (( merge ))
properties:
  acceptance_tests: (( merge ))
  system_domain: (( merge ))
  consul:
    agent:
      domain: (( merge ))
      log_level: (( merge ))
      servers:
        lan: (( merge ))
    ca_cert:
    agent_cert:
    agent_key:
    encrypt_keys:
    require_ssl:
    server_cert:
    server_key:
  loggregator:
    etcd:
      machines: (( merge ))
      ca_cert: (( merge ))
      require_ssl: (( merge ))
    tls:
      ca_cert: (( merge ))
      metron:
        cert: (( merge ))
        key: (( merge ))
      statsd_injector:
        cert: (( merge ))
        key: (( merge ))
  metron_agent:
    etcd:
      client_cert: (( merge ))
      client_key: (( merge ))
  metron_endpoint:
    shared_secret: (( merge ))
  databases:
    address: (( merge || nil ))
    db_scheme: (( merge || nil ))
    port: (( merge || nil ))
  uaa:
    ca_cert:
    port:
    ssl:
      port:
    clients:
      gorouter:
        secret:
      tcp_emitter:
        secret:
      tcp_router:
        secret:
  statsd_injector:
    deployment: (( merge ))
